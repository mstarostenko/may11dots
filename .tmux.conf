# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal "rxvt-unicode-256color"

# vi mode
set-window-option -g mode-keys vi

# Set the prefix to ^A.
unbind C-b

# bind a send-prefix
set -g prefix C-a

set -g history-limit 20000

set -g mouse on

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# scroll functional
bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
bind-key -t vi-copy PPage page-up
bind-key -t vi-copy NPage page-down

bind -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "select-pane -t =; send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "select-pane -t =; send-keys -M" "select-pane -t =; send-keys -M"
bind-key -t vi-copy WheelUpPane halfpage-up
bind-key -t vi-copy WheelDownPane halfpage-down

set -sg escape-time 0
# scroll functional end

bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

unbind R
bind R source-file ~/.tmux.conf \; display "TMUX .CONFIG Reloaded!"

#hsplit
unbind '"'
bind | split-window -h -c "#{pane_current_path}"

#vsplit
unbind %
bind - split-window -v -c "#{pane_current_path}"

# kill current pane/window
bind-key q confirm-before kill-pane
bind-key Q confirm-before kill-window

set -g status-fg white
set -g status-bg red


#hsplit
unbind '"'
bind | split-window -h -c "#{pane_current_path}"

unbind 'z'
unbind 'f'
bind f resize-pane -Z "#{pane_current_path}"

unbind [
bind Escape copy-mode

unbind p
bind p paste-buffer

bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection

set-option -g status on                # turn the status bar on
# set -g status-utf8 on                  # set utf-8 for the status bar
set -g status-interval 2               # set update frequencey (default 15 seconds)
set -g status-justify centre           # center window list for clarity
set-option -g status-position bottom    # position the status bar at top of screen

# show session name, window & pane number, date and time on right side of
# status bar
# set -g status-right-length 60
# set -g status-right "%Y %b %d | %l:%M %p"

# window title
# enable wm window titles
set-option -g set-titles on

# wm window title string (uses statusbar variables)
set-option -g set-titles-string '#S:#I.#P #W' # window number,program name,active (or not)

# color scheme (styled as vim-powerline)
set -g status-left-length 52
# set -g status-right-length 451
set -g status-fg black
set -g status-bg colour135
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold

bind-key -n MouseDrag1Status swap-window -t=
bind-key -n MouseDown3Status new-window -a -t=

# The statusbar
set -g status-position bottom
# set -g status-bg colour234
set -g status-bg colour8
set -g status-fg colour137
set -g status-attr dim
# set -g status-left ''
# set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-fg colour81
setw -g window-status-current-bg colour238
setw -g window-status-current-attr bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-fg colour138
setw -g window-status-bg colour235
setw -g window-status-attr none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '
